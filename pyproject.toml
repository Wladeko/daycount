[project]
name = "daycount"
version = "0.1.0"
authors = [
  {name="Władysław Olejnik", email="wladekolejnik@gmail.com" },
]
description = "A Python package for calculating day count conventions."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pre-commit>=4.2.0",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
]

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = [
    "migrations",
    "venv",
    ".venv",
    "__pycache__",
    ".git"
]

[tool.ruff.lint]
# Enable comprehensive rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "PL",  # Pylint
    "RUF", # Ruff-specific rules
]

# Ignore specific rules that might be too strict
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function calls in argument defaults
    "PLR0913", # Too many arguments to function call
    "PLR2004", # Magic value used in comparison

]

# Allow autofix for all enabled rules when `--fix` is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings
quote-style = "double"
# Like Black, indent with spaces, rather than tabs
indent-style = "space"
# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and fixtures
"tests/**/*" = ["PLR2004", "S101", "ARG"]
# __init__.py files can have unused imports
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["daycount"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 12
max-returns = 6
max-statements = 50

# Mypy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_subclassing_any = true
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "third_party_package.*",
]
ignore_missing_imports = true
